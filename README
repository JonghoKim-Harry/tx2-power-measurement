JETSON TX2 POWER MEASUREMENT
============


OBJECTIVE

   To measure Jetson TX2 power consumption


HOW TO BUILD and SELFTEST

    make                Build from source codes

    make check          Selftest with CIFAR-10 and MNIST dataset
                        Note that you should set variable CAFFE_HOME
                        in Makefile

    make debug          Build debug version binary and then do selftest with
                        CIFAR-10 and MNIST dataset. It will print more
                        messeages. Note that you should set variable CAFFE_HOME
                        in Makefile


HOW TO USE

    -h                  Print help message

    -c <component>      A component whose power consumption will be measured
                         * Supported components: all, cpu, gpu, ddr, wifi, soc

    -f <file name>      Path to statistics file. It will truncate content of
                        the old file and create new one


REFERENCE

   * Jetson TX2 Power Monitoring:
        https://github.com/horizon-research/tx2-power-consumption.git
        https://devtalk.nvidia.com/default/topic/1000830/jetson-tx2/jetson-tx2-ina226-power-monitor-with-i2c-interface-/

   * VGG Models:
        http://www.robots.ox.ac.uk/~vgg/research/very_deep/
        https://github.com/davidgengenbach/vgg-caffe

   * ResNet:
        https://github.com/KaimingHe/deep-residual-networks


DESIGN PRINCIPLE

   * In order to minimize measurement overhead, I used a lot of system calls.
   
   * For portability, I used only C standard-compatible or POSIX-compatible
     Linux system calls. I did NOT used any of Linux-specific system calls.
     See: Documentation/portability


CFLAGS FOR COMPILATION
============

   CFLAG NAME               DEFAULT    EXPLANATION
   ----------               -------    -----------
   TRACE_CPU                  ON       Trace CPU informations
   TRACE_MEM                  ON       Trace EMC/DDR/MEM informations
   TRACE_CAFFE_TIMESTAMP      OFF      Trace Caffe timestamp
   TRACE_POWER                ON       Trace BOARD/SoC/Wifi power


CFLAGS FOR DEBUG
============

   CFLAG NAME               DEFAULT    EXPLANATION
   ----------               -------    -----------
   DEBUG                      OFF      Trace powertool debug
   NDEBUG                     ON       Suppress assert() defined by <assert.h>
   DEBUG_SUMMARY              OFF
   DEBUG_GOVERNOR             OFF
   DEBUG_LOG_TO_STAT          OFF


SCRIPT USAGE EXAMPLE
============

   # LeNet with MNIST dataset
   sudo ./script/run/iterate_gpu_freq.sh lenet-batch100 ./script/run/run_lenet-batch100.sh
   sudo ./script/run/iterate_gpu_freq.sh lenet-batch2000 ./script/run/run_lenet-batch2000.sh


   # CIFAR-10 Network with CIFAR-10 dataset
   sudo ./script/run/iterate_gpu_freq.sh cifar10-batch100 ./script/run/run_cifar10-batch100.sh
   sudo ./script/run/iterate_gpu_freq.sh cifar10-batch500 ./script/run/run_cifar10-batch500.sh


   # AlexNet with ILSVRC'12 dataset
   sudo ./script/run/iterate_gpu_freq.sh alexnet-batch50 ./script/run/run_alexnet-batch50.sh


   # GoogLeNet with ILSVRC'12 dataset
   sudo ./script/run/iterate_gpu_freq.sh googlenet-batch50 ./script/run/run_googlenet-batch50.sh


   # VGGNet with ILSVRC'12 dataset
   sudo ./script/run/iterate_gpu_freq.sh vggnet16-batch50 ./script/run/run_vggnet16-batch50.sh
   sudo ./script/run/iterate_gpu_freq.sh vggnet19-batch50 ./script/run/run_vggnet19-batch50.sh


   # ResNet with ILSVRC'12 dataset
   sudo ./script/run/iterate_gpu_freq.sh resnet50-batch25  ./script/run/run_resnet50-batch25.sh
   sudo ./script/run/iterate_gpu_freq.sh resnet101-batch10 ./script/run/run_resnet101-batch10.sh
   sudo ./script/run/iterate_gpu_freq.sh resnet152-batch10 ./script/run/run_resnet152-batch10.sh

   #
   sudo ./power_measurement -g ondemand8050 -i 10000 -f exp_result/cifar-10/cifar-10@governor.txt ./script/run/run_cifar10-batch100.sh
   sudo ./power_measurement -g ondemand8050 -i 10000 -f exp_result/lenet/lenet@governor.txt ./script/run/run_lenet-batch100.sh


   # Set GPU frequency to be fixed to 1122000000Hz (1.122GHz)
   sudo ./script/run/fix_gpu_freq 1122000000


   # Run experiments with all available GPU frequencies as fixed frequency
   # and default governor setup with AlexNet and ImageNet'2012 dataset
   sudo ./script/run/iterate_gpu_freq.sh alexnet-batch50 ./script/run/run_alexnet-batch50.sh


   # CaffeNet
   ./script/run/run_caffenet.sh /home/nvidia/caffe/examples/images/cat.jpg
   sudo ./script/run/iterate_gpu_freq.sh caffenet-cat ./script/run/run_caffenet.sh /home/nvidia/caffe/examples/images/cat.jpg
   sudo ./script/run/iterate_gpu_freq.sh caffenet-fishbike ./script/run/run_caffenet.sh /home/nvidia/caffe/examples/images/fish-bike.jpg


   # Use tegrastats to measure power, etc.
   #
   # Note that there is sleep in the script, in order to cool down CPUs or GPU
   sudo ./script/run/use_tegrastats.sh 10 cifar10-tegralog-10ms.txt script/run/run_cifar10.sh
   sudo ./script/run/use_tegrastats.sh 10 exp_result/cifar10-tegralog-10ms.txt sudo ./power_measurement -c gpu -f exp_result/cifar10-powerlog-10ms.txt ./script/run/run_cifar10.sh


   #
   sudo ./script/run/iterate_gpu_freq_tegrastats.sh 1>exp_log.txt lenet-batch100 30 ./script/run/run_lenet-batch100.sh 2>>caffelog.txt


   # Draw GPU power and frequency plot
   gnuplot -c script/plot/gpu-power-frequency.plot \
              test_result/cifar-10/cifar-10_gpu_1122000000Hz.txt \
              test_result/cifar-10/cifar-10_gpu_1122000000Hz.png \
              cifar-10


   # Draw CPU and GPU power and frequency plot
   gnuplot -c script/plot/cpu-gpu-power.plot \
              test_result/mnist/mnist_gpu_1122000000Hz.txt \
              test_result/mnist/mnist_cpu_gpu_1122000000Hz.png \
              mnist


   # Draw GPU power and frequency plot for all .txt file in directory
   ./script/plot/draw_all_plot.sh test_result/cifar-10/ script/plot/gpu-power-frequency.plot gpu-power-frequency cifar-10


   # Draw CPU and GPU power and frequency plot for all .txt file in directory for CIFAR-10 dataset
   ./script/plot/draw_all_plot.sh test_result/cifar-10/ script/plot/cpu-gpu-power-frequency.plot cpu-gpu-power-frequency cifar-10


   # Draw CPU and GPU power and frequency plot for all .txt file in directory for MNIST dataset
   ./script/plot/draw_all_plot.sh test_result/mnist/ script/plot/cpu-gpu-power-frequency.plot cpu-gpu-power-frequency mnist


   # Crop caffelog files in a directory
   ./script/log/caffetime_forward.sh test_result/cifar-10/ > cifar-10.time.csv


HOW TO DEBUG?
============

   sudo gdb -ex=r --args ./power_measurement -g ondemand8050 -i 10000 -f exp_result/cifar-10/cifar-10@governor.txt ./script/run/run_cifar10.sh
